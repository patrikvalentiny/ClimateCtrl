name: Staging Push

on:
  push:
    branches:
      - staging
  workflow_dispatch:

env:
  FLYWAY_URL: ${{ secrets.STAGING_DB_URL }}
  FLYWAY_USER: ${{ secrets.STAGING_DB_USER }}
  FLYWAY_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
  FLYWAY_SCHEMAS: public,climate_ctrl

jobs:
  flyway_migrate:
    runs-on: ubuntu-latest

    container:
      image: flyway/flyway:latest
      volumes:
        - .:/flyway/sql
    steps:
      - uses: actions/checkout@v4

      - name: Run Flyway Migrations
        env:
          FLYWAY_LOCATIONS: filesystem:/flyway/sql
        run: |
          flyway migrate

      - name: Flyway info and write result to file
        env:
          FLYWAY_SCHEMAS: public,climate_ctrl
        run: |
          flyway info
          
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: patrikvalentiny/climate-ctrl

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}       
      - uses: azure/webapps-deploy@v3
        with:
          app-name: 'climate-ctrl-staging'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#      - name: Invoke deployment hook
#        uses: distributhor/workflow-webhook@v3
#        with:
#          webhook_url: ${{ secrets.WEBHOOK_STAGING_URL }}

  firebase_build_and_deploy:
    name: Firebase Build and Preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cd ./frontend/ && npm i && npm run build -- --configuration=staging
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          entryPoint: ./frontend/
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CLIMATE_CTRL_STAGING }}
          channelId: live
          projectId: climate-ctrl-staging
